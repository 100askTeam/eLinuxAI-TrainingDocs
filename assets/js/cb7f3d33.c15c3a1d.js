"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4330],{43174:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>p});var s=i(85893),t=i(11151);const r={sidebar_position:1},o="OCR\u6587\u5b57\u68c0\u6d4b",a={id:"CanaanK230/part14/part5/ocrDet",title:"OCR\u6587\u5b57\u68c0\u6d4b",description:"1.\u5b9e\u9a8c\u76ee\u7684",source:"@site/docs/CanaanK230/part14/part5/01-ocrDet.md",sourceDirName:"CanaanK230/part14/part5",slug:"/CanaanK230/part14/part5/ocrDet",permalink:"/CanaanK230/part14/part5/ocrDet",draft:!1,unlisted:!1,editUrl:"https://github.com/100askTeam/eLinuxAI-TrainingDocs/tree/main/docs/CanaanK230/part14/part5/01-ocrDet.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"canaanK230Sidebar",previous:{title:"OCR\u76f8\u5173",permalink:"/category/ocr\u76f8\u5173"},next:{title:"OCR\u6587\u5b57\u8bc6\u522b",permalink:"/CanaanK230/part14/part5/ocrRec"}},d={},p=[{value:"1.\u5b9e\u9a8c\u76ee\u7684",id:"1\u5b9e\u9a8c\u76ee\u7684",level:2},{value:"2.\u6838\u5fc3\u6d41\u7a0b",id:"2\u6838\u5fc3\u6d41\u7a0b",level:2},{value:"3.\u793a\u4f8b\u4ee3\u7801",id:"3\u793a\u4f8b\u4ee3\u7801",level:2},{value:"4.\u5b9e\u9a8c\u7ed3\u679c",id:"4\u5b9e\u9a8c\u7ed3\u679c",level:2}];function _(e){const n={code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"ocr\u6587\u5b57\u68c0\u6d4b",children:"OCR\u6587\u5b57\u68c0\u6d4b"}),"\n",(0,s.jsx)(n.h2,{id:"1\u5b9e\u9a8c\u76ee\u7684",children:"1.\u5b9e\u9a8c\u76ee\u7684"}),"\n",(0,s.jsx)(n.p,{children:"\u5b9e\u73b0\u6444\u50cf\u5934\u753b\u9762\u7684\u5b57\u7b26\u68c0\u6d4b\u3002"}),"\n",(0,s.jsx)(n.h2,{id:"2\u6838\u5fc3\u6d41\u7a0b",children:"2.\u6838\u5fc3\u6d41\u7a0b"}),"\n",(0,s.jsxs)(n.p,{children:["\u6839\u636e\u663e\u793a\u6a21\u5f0f\uff08",(0,s.jsx)(n.code,{children:"hdmi"}),"\u6216",(0,s.jsx)(n.code,{children:"lcd"}),"\uff09\u8bbe\u7f6e\u663e\u793a\u5206\u8fa8\u7387\u3002"]}),"\n",(0,s.jsx)(n.p,{children:"\u8bbe\u7f6eOCR\u6a21\u578b\u8def\u5f84\u3001\u9608\u503c\u548c\u56fe\u50cf\u5c3a\u5bf8\u3002"}),"\n",(0,s.jsxs)(n.p,{children:["\u521d\u59cb\u5316",(0,s.jsx)(n.code,{children:"PipeLine"}),"\uff0c\u5e76\u5f00\u59cb\u521b\u5efa\u56fe\u50cf\u91c7\u96c6\u548c\u663e\u793a\u7ba1\u9053\u3002"]}),"\n",(0,s.jsxs)(n.p,{children:["\u5b9e\u4f8b\u5316",(0,s.jsx)(n.code,{children:"OCRDetectionApp"}),"\u5bf9\u8c61\uff0c\u914d\u7f6e\u9884\u5904\u7406\u65b9\u6cd5\u3002"]}),"\n",(0,s.jsx)(n.p,{children:"\u8fdb\u5165\u5faa\u73af\uff0c\u4e0d\u65ad\u83b7\u53d6\u56fe\u50cf\u5e27\u8fdb\u884c\u63a8\u7406\u3001\u540e\u5904\u7406\u548c\u7ed8\u5236\u7ed3\u679c\u3002"}),"\n",(0,s.jsxs)(n.p,{children:["\u5728\u5faa\u73af\u5185\u90e8\uff0c\u8c03\u7528",(0,s.jsx)(n.code,{children:"pl.get_frame()"}),"\u83b7\u53d6\u56fe\u50cf\u5e27\uff0c\u4f7f\u7528",(0,s.jsx)(n.code,{children:"ocr_det.run()"}),"\u6267\u884c\u63a8\u7406\uff0c\u6700\u540e\u901a\u8fc7",(0,s.jsx)(n.code,{children:"ocr_det.draw_result()"}),"\u7ed8\u5236\u68c0\u6d4b\u7ed3\u679c\u5230\u663e\u793a\u8bbe\u5907\u3002"]}),"\n",(0,s.jsx)(n.h2,{id:"3\u793a\u4f8b\u4ee3\u7801",children:"3.\u793a\u4f8b\u4ee3\u7801"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'\'\'\'\n\u672c\u7a0b\u5e8f\u9075\u5faaGPL V3\u534f\u8bae, \u8bf7\u9075\u5faa\u534f\u8bae\n\u5b9e\u9a8c\u5e73\u53f0: DshanPI CanMV\n\u5f00\u53d1\u677f\u6587\u6863\u7ad9\u70b9\t: https://eai.100ask.net/\n\u767e\u95ee\u7f51\u5b66\u4e60\u5e73\u53f0   : https://www.100ask.net\n\u767e\u95ee\u7f51\u5b98\u65b9B\u7ad9    : https://space.bilibili.com/275908810\n\u767e\u95ee\u7f51\u5b98\u65b9\u6dd8\u5b9d   : https://100ask.taobao.com\n\'\'\'\nfrom libs.PipeLine import PipeLine, ScopedTiming\nfrom libs.AIBase import AIBase\nfrom libs.AI2D import Ai2d\nimport os\nimport ujson\nfrom media.media import *\nfrom time import *\nimport nncase_runtime as nn\nimport ulab.numpy as np\nimport time\nimport utime\nimport image\nimport random\nimport gc\nimport sys\nimport aicube\n\n# \u81ea\u5b9a\u4e49OCR\u68c0\u6d4b\u7c7b\nclass OCRDetectionApp(AIBase):\n    def __init__(self,kmodel_path,model_input_size,mask_threshold=0.5,box_threshold=0.2,rgb888p_size=[224,224],display_size=[1920,1080],debug_mode=0):\n        super().__init__(kmodel_path,model_input_size,rgb888p_size,debug_mode)\n        self.kmodel_path=kmodel_path\n        # \u6a21\u578b\u8f93\u5165\u5206\u8fa8\u7387\n        self.model_input_size=model_input_size\n        # \u5206\u7c7b\u9608\u503c\n        self.mask_threshold=mask_threshold\n        self.box_threshold=box_threshold\n        # sensor\u7ed9\u5230AI\u7684\u56fe\u50cf\u5206\u8fa8\u7387\n        self.rgb888p_size=[ALIGN_UP(rgb888p_size[0],16),rgb888p_size[1]]\n        # \u663e\u793a\u5206\u8fa8\u7387\n        self.display_size=[ALIGN_UP(display_size[0],16),display_size[1]]\n        self.debug_mode=debug_mode\n        # Ai2d\u5b9e\u4f8b\uff0c\u7528\u4e8e\u5b9e\u73b0\u6a21\u578b\u9884\u5904\u7406\n        self.ai2d=Ai2d(debug_mode)\n        # \u8bbe\u7f6eAi2d\u7684\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u548c\u7c7b\u578b\n        self.ai2d.set_ai2d_dtype(nn.ai2d_format.NCHW_FMT,nn.ai2d_format.NCHW_FMT,np.uint8, np.uint8)\n\n    # \u914d\u7f6e\u9884\u5904\u7406\u64cd\u4f5c\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86pad\u548cresize\uff0cAi2d\u652f\u6301crop/shift/pad/resize/affine\uff0c\u5177\u4f53\u4ee3\u7801\u8bf7\u6253\u5f00/sdcard/app/libs/AI2D.py\u67e5\u770b\n    def config_preprocess(self,input_image_size=None):\n        with ScopedTiming("set preprocess config",self.debug_mode > 0):\n            # \u521d\u59cb\u5316ai2d\u9884\u5904\u7406\u914d\u7f6e\uff0c\u9ed8\u8ba4\u4e3asensor\u7ed9\u5230AI\u7684\u5c3a\u5bf8\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6einput_image_size\u81ea\u884c\u4fee\u6539\u8f93\u5165\u5c3a\u5bf8\n            ai2d_input_size=input_image_size if input_image_size else self.rgb888p_size\n            top,bottom,left,right=self.get_padding_param()\n            self.ai2d.pad([0,0,0,0,top,bottom,left,right], 0, [0,0,0])\n            self.ai2d.resize(nn.interp_method.tf_bilinear, nn.interp_mode.half_pixel)\n            self.ai2d.build([1,3,ai2d_input_size[1],ai2d_input_size[0]],[1,3,self.model_input_size[1],self.model_input_size[0]])\n\n    # \u81ea\u5b9a\u4e49\u5f53\u524d\u4efb\u52a1\u7684\u540e\u5904\u7406\n    def postprocess(self,results):\n        with ScopedTiming("postprocess",self.debug_mode > 0):\n            # chw2hwc\n            hwc_array=self.chw2hwc(self.cur_img)\n            # \u8fd9\u91cc\u4f7f\u7528\u4e86aicube\u5c01\u88c5\u7684\u63a5\u53e3seg_post_process\u505a\u540e\u5904\u7406\uff0c\u8fd4\u56de\u4e00\u4e2a\u548cdisplay_size\u76f8\u540c\u5206\u8fa8\u7387\u7684mask\u56fe\n            # det_boxes\u7ed3\u6784\u4e3a[[crop_array_nhwc,[p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y]],...]\n            det_boxes = aicube.ocr_post_process(results[0][:,:,:,0].reshape(-1), hwc_array.reshape(-1),self.model_input_size,self.rgb888p_size, self.mask_threshold, self.box_threshold)\n            all_boxes_pos=[]\n            for det_box in det_boxes:\n                all_boxes_pos.append(det_box[1])\n            return all_boxes_pos\n\n    # \u7ed8\u5236\u7ed3\u679c\n    def draw_result(self,pl,all_boxes_pos):\n        with ScopedTiming("display_draw",self.debug_mode >0):\n            pl.osd_img.clear()\n            # \u4e00\u6b21\u7ed8\u5236\u56db\u6761\u8fb9\uff0c\u5f97\u5230\u6587\u672c\u68c0\u6d4b\u7684\u56db\u8fb9\u5f62\n            for i in range(len(all_boxes_pos)):\n                for j in range(4):\n                    x1=all_boxes_pos[i][2*j]*self.display_size[0]//self.rgb888p_size[0]\n                    y1=all_boxes_pos[i][2*j+1]*self.display_size[1]//self.rgb888p_size[1]\n                    x2=all_boxes_pos[i][(2*j+2)%8]*self.display_size[0]//self.rgb888p_size[0]\n                    y2=all_boxes_pos[i][(2*j+3)%8]*self.display_size[1]//self.rgb888p_size[1]\n                    pl.osd_img.draw_line(int(x1),int(y1),int(x2),int(y2),color=(255,255,0,0),thickness=4)\n\n    # \u8ba1\u7b97padding\u53c2\u6570\n    def get_padding_param(self):\n        # \u53f3padding\u6216\u4e0bpadding\n        dst_w = self.model_input_size[0]\n        dst_h = self.model_input_size[1]\n        input_width = self.rgb888p_size[0]\n        input_high = self.rgb888p_size[1]\n        ratio_w = dst_w / input_width\n        ratio_h = dst_h / input_high\n        if ratio_w < ratio_h:\n            ratio = ratio_w\n        else:\n            ratio = ratio_h\n        new_w = (int)(ratio * input_width)\n        new_h = (int)(ratio * input_high)\n        dw = (dst_w - new_w) / 2\n        dh = (dst_h - new_h) / 2\n        top = (int)(round(0))\n        bottom = (int)(round(dh * 2 + 0.1))\n        left = (int)(round(0))\n        right = (int)(round(dw * 2 - 0.1))\n        return  top, bottom, left, right\n\n    # chw2hwc\n    def chw2hwc(self,features):\n        ori_shape = (features.shape[0], features.shape[1], features.shape[2])\n        c_hw_ = features.reshape((ori_shape[0], ori_shape[1] * ori_shape[2]))\n        hw_c_ = c_hw_.transpose()\n        new_array = hw_c_.copy()\n        hwc_array = new_array.reshape((ori_shape[1], ori_shape[2], ori_shape[0]))\n        del c_hw_\n        del hw_c_\n        del new_array\n        return hwc_array\n\nif __name__=="__main__":\n    # \u663e\u793a\u6a21\u5f0f\uff0c\u9ed8\u8ba4"hdmi",\u53ef\u4ee5\u9009\u62e9"hdmi"\u548c"lcd"\uff0ck230d\u53d7\u9650\u5185\u5b58\u4e0d\u652f\u6301\n    display_mode="lcd"\n    if display_mode=="hdmi":\n        display_size=[1920,1080]\n    else:\n        display_size=[800,480]\n    # \u6a21\u578b\u8def\u5f84\n    kmodel_path="/sdcard/examples/kmodel/ocr_det_int16.kmodel"\n    # kmodel\u5176\u5b83\u53c2\u6570\u8bbe\u7f6e\n    mask_threshold = 0.25\n    box_threshold = 0.3\n    rgb888p_size=[640,360]\n\n    # \u521d\u59cb\u5316PipeLine\n    pl=PipeLine(rgb888p_size=rgb888p_size,display_size=display_size,display_mode=display_mode)\n    pl.create()\n    # \u521d\u59cb\u5316\u81ea\u5b9a\u4e49OCR\u68c0\u6d4b\u5b9e\u4f8b\n    ocr_det=OCRDetectionApp(kmodel_path,model_input_size=[640,640],mask_threshold=mask_threshold,box_threshold=box_threshold,rgb888p_size=rgb888p_size,display_size=display_size,debug_mode=0)\n    ocr_det.config_preprocess()\n    try:\n        while True:\n            os.exitpoint()\n            with ScopedTiming("total",1):\n                # \u83b7\u53d6\u5f53\u524d\u5e27\u6570\u636e\n                img=pl.get_frame()\n                # \u63a8\u7406\u5f53\u524d\u5e27\n                res=ocr_det.run(img)\n                # \u7ed8\u5236\u7ed3\u679c\u5230PipeLine\u7684osd\u56fe\u50cf\n                ocr_det.draw_result(pl,res)\n                # \u663e\u793a\u5f53\u524d\u7684\u7ed8\u5236\u7ed3\u679c\n                pl.show_image()\n                gc.collect()\n    except Exception as e:\n        sys.print_exception(e)\n    finally:\n        ocr_det.deinit()\n        pl.destroy()\n'})}),"\n",(0,s.jsx)(n.h2,{id:"4\u5b9e\u9a8c\u7ed3\u679c",children:"4.\u5b9e\u9a8c\u7ed3\u679c"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"image-20250423182608052",src:i(86006).Z+"",width:"708",height:"398"})}),"\n",(0,s.jsx)(n.p,{children:"\u200b\t\u8fd0\u884c\u4ee3\u7801\u540e\uff0c\u53ef\u4ee5\u5728\u663e\u793a\u5c4f\u770b\u5230\u68c0\u6d4b\u7ed3\u679c\uff1a"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"image-20250423182723177",src:i(87032).Z+"",width:"1300",height:"905"})})]})}function l(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(_,{...e})}):_(e)}},86006:(e,n,i)=>{i.d(n,{Z:()=>s});const s=i.p+"assets/images/image-20250423182608052-b72dd9e70524d6615c49a00ac320224d.png"},87032:(e,n,i)=>{i.d(n,{Z:()=>s});const s=i.p+"assets/images/image-20250423182723177-3dbb1c8e7846ae8e92ab1e8b30c0049b.png"},11151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>o});var s=i(67294);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);